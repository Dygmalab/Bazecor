name: Build/release

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            gyp: ""
          - os: windows-2019
            gyp: ""
          - os: ubuntu-20.04
            gyp: use_udev=0 use_system_libusb=true

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install USB compilation dependencies
        uses: lyricwulf/abc@v1
        with:
          linux: build-essential libusb-1.0-0 libudev-dev libxtst-dev libxrandr-dev

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        env:
          GYP_DEFINES: ${{ matrix.gyp }}
          NODE_OPTIONS: --max-old-space-size=1024
        with:
          node-version: 16
          architecture: ${{ matrix.node }}

      - name: Build/release Electron app
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Save Artifact
        uses: "actions/upload-artifact@v3"
        with:
          name: Bazecor ${{ matrix.node-version }}
          path: |
            ${{ github.workspace }}/dist/*.exe
            ${{ github.workspace }}/dist/*.AppImage
            ${{ github.workspace }}/dist/*.dmg
