import { BrowserWindow, app } from "electron";
import windowStateKeeper from "electron-window-state";
import path from "path";
import { configureNativeTheme } from "./setup/theme";
import { configureIPCs, removeIPCs } from "./setup/configureIPCs";
import configureRedirect from "./setup/configureRedirect";
import onDevTools from "./setup/onDevTools";
import onReadyToShow from "./setup/onReadyToShow";
import onClose from "./setup/onClose";
import Window from "./managers/Window";
import { configureUSB } from "./setup/configureUSB";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

const createWindow = async (): Promise<void> => {
  // Create the browser window.
  const mainWindowState = windowStateKeeper({
    defaultWidth: 1200,
    defaultHeight: 900,
  });

  const mainWindow = new BrowserWindow({
    x: mainWindowState.x,
    y: mainWindowState.y,
    width: mainWindowState.width,
    height: mainWindowState.height,
    minWidth: 650,
    minHeight: 570,
    resizable: true,
    icon: path.join("../renderer/static", "/logo.png"),
    show: false,
    backgroundColor: "#2e2c29",
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      sandbox: false,
      nodeIntegration: true,
      contextIsolation: false,
      webSecurity: false,
    },
  });

  removeIPCs();
  configureIPCs();
  mainWindowState.manage(mainWindow);

  // and load the index.html of the app.
  await mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  Window.getInstance(); // init Windows manager
  Window.setWindow(mainWindow);
  if (!app.isPackaged) {
    // Open the DevTools if we are in development mode
    mainWindow.webContents.openDevTools();
  }

  configureNativeTheme();
  configureRedirect();
  onReadyToShow();
  onDevTools();
  onClose();
  await configureUSB();
};

export default createWindow;
